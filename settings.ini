; Use the following syntax: Type:ValueName=Value
; Where Type can be either BOOL, INT, DOUBLE, STRING or PATH
; The Type can also be a comma seperated list of any of the above mentioned types in the format LIST<TYPE>, i.e. LIST<STRING>
; ValueName can be whaterver, but the Value have to match the type indicated.

; == General Settings ==
PATH:domain=Data/Classical tracks/Gripper/gripper_domain.pddl
PATH:problem=Data/Classical tracks/Gripper/gripper_problem_hard.pddl
PATH:downwardpath=../../P7Requirements/downward/fast-downward.py
PATH:validatorpath=../../P7Requirements/downward/VAL/validate
; Reformulators
    ; sameoutput - Does nothing
    ; walker - Generates macros based on walks through the state space
LIST<STRING>:reformulator=walker

; == Fast Downward Settings ==
STRING:downwardsearch=lazy_greedy
STRING:downwardheuristic=[ff(), cea()], [ff(), cea()]

; == Walker Settings ==
; Heuristics - Only relevant to the walker reformulator
    ; random - The walker choses actions at random
    ; goalCount - The walker choses actions that increase the number of goal facts in the state, otherwise random
    ; goalPredicateCount - The walker choses actions that increase the number of goal facts in the state, or facts relating to the goal, otherwise random
STRING:heuristic=goalPredicateCount
INT:timelimit=1000
BOOL:printwalkersteps=false

; == Entanglement Finder Settings ==
INT:searchCeiling=-1
INT:searchFloor=3
INT:entanglerTimeLimit=-1
INT:levelReductionFactor=2
; LevelReductionTypes - What type of level reduction should be used in the entanglement finder
    ; Division - Level = Level / levelReductionFactor
    ; Subtraction - Level = Level - levelReductionFactor
STRING:levelReductionTypes=Division

; == Entanglement Evaluator Settings ==
DOUBLE:minimumQualityPercent=0.50
; EntanglerLengthModifier - What modifier to give to the Quality of occurance length
    ; none - 1
    ; default - Length / MaxLength
    ; lengthBias - 1 / max(MaxLength - Length, 1)
STRING:entanglerLengthModifier=lengthBias
; EntanglerOccuranceModifier - What modifier to give the Quality of occurance count
    ; none - 1
    ; default - Occurance / MaxOccurance
    ; lowOccuranceBias - 1 / Occurance
STRING:entanglerOccuranceModifier=lowOccuranceBias
BOOL:printentanglersteps=true

; == Misc Settings ==
BOOL:debugmode=true
